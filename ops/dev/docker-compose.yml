version: '3.7'

services:
  minio1:
    image: minio/minio:RELEASE.2021-01-08T21-18-21Z
    volumes:
      - data1:/data1
    ports:
      - "9000:9000"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  postgres1:
    image: postgres:13.1-alpine
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  api:
    container_name: easyfile-api
    build: .
    environment:
      MINIO_URL: ${MINIO_URL}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      FLYWAY_USER: ${FLYWAY_USER}
      FLYWAY_PASSWORD: ${FLYWAY_PASSWORD}
      FLYWAY_URL: ${FLYWAY_URL}
    ports:
      - "8080:8080"

  frontend:
    container_name: easyfile-frontend
    build:
      context: ./easyfile-frontend
      args:
        EASYFILE_BACKEND: ${EASYFILE_BACKEND}
    ports:
      - "80:5000"

#  grafana:
#    image: grafana/grafana
#    volumes:
#      - grafana-storage:/var/lib/grafana
#    ports:
#      - 3000:3000


volumes:
  grafana-storage:
  db-data:
  data1: