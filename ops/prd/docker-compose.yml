version: '3.7'

services:
  minio1:
    image: minio/minio:RELEASE.2021-01-08T21-18-21Z
    volumes:
      - data1:/data1
    expose:
      - 9000
    environment:
      MINIO_ROOT_USER: ${EASYFILE_MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${EASYFILE_MINIO_SECRET_KEY}
    command: server /data1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`${EASYFILE_MINIO_HOST}`)"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio.entrypoints=websecure"
      - "traefik.http.routers.minio.tls=true"
      - "traefik.http.routers.minio.tls.certresolver=mytlschallenge"
      - "traefik.http.routers.minio.middlewares=private-network-ipwhitelist"

  postgres1:
    image: postgres:13.1-alpine
    expose:
      - 5432
    environment:
      POSTGRES_USER: ${EASYFILE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${EASYFILE_POSTGRES_PASSWORD}
      POSTGRES_DB: easyfiledb
    volumes:
      - postgres1:/var/lib/postgresql/data

  easyfile-api:
    image: thodev/easyfile-api:0.1
    pull_policy: always
    environment:
      MINIO_URL: http://minio1:9000
      MINIO_ACCESS_KEY: ${EASYFILE_MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${EASYFILE_MINIO_SECRET_KEY}
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres1:5432/easyfiledb
      SPRING_DATASOURCE_USERNAME: ${EASYFILE_SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${EASYFILE_SPRING_DATASOURCE_PASSWORD}
      JWT_KEY: ${EASYFILE_JWT_KEY}
    expose:
      - 8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.easyfile-api.rule=Host(`${EASYFILE_API_HOST}`) && PathPrefix(`/api`)"
      # - "traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/api"
      # - "traefik.http.routers.easyfile-api.middlewares=api-stripprefix"
      - "traefik.http.routers.easyfile-api.entrypoints=web"
      - "traefik.http.services.easyfile-api.loadbalancer.server.port=8080"
      - "traefik.http.routers.easyfile-api.entrypoints=websecure"
      - "traefik.http.routers.easyfile-api.tls.certresolver=mytlschallenge"

  easyfile-frontend:
    image: thodev/easyfile-frontend:0.1
    pull_policy: always
    expose:
      - 5000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.easyfile-frontend.rule=Host(`${EASYFILE_FRONTEND_HOST}`)"
      - "traefik.http.services.easyfile-frontend.loadbalancer.server.port=5000"
      - "traefik.http.routers.easyfile-frontend.entrypoints=websecure"
      - "traefik.http.routers.easyfile-frontend.tls=true"
      - "traefik.http.routers.easyfile-frontend.tls.certresolver=mytlschallenge"

  portainer:
    image: portainer/portainer-ce
    expose:
        - 9000
    volumes:
        - /data/portainer:/data
        - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.portainer.rule=Host(`${EASYFILE_PORTAINER_HOST}`)"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"
        - "traefik.http.routers.portainer.entrypoints=websecure"
        - "traefik.http.routers.portainer.tls=true"
        - "traefik.http.routers.portainer.tls.certresolver=mytlschallenge"
        - "traefik.http.routers.portainer.middlewares=private-network-ipwhitelist"
  

  traefik:
    image: traefik:v2.4
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      # - "--certificatesresolvers.mytlschallenge.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.mytlschallenge.acme.email=tverweij@pm.me"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
    ports:
      - 80:80
      - 443:443
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /data/letsencrypt:/letsencrypt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik_https.rule=Host(`${EASYFILE_TRAEFIK_HOST}`)"
      - "traefik.http.routers.traefik_https.service=api@internal"
      - "traefik.http.routers.traefik_https.entrypoints=websecure"
      - "traefik.http.routers.traefik_https.tls=true"
      - "traefik.http.routers.traefik_https.tls.certresolver=mytlschallenge"
      - "traefik.http.routers.traefik_https.middlewares=traefik-auth,private-network-ipwhitelist"
      - "traefik.http.middlewares.https_redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https_redirect.redirectscheme.permanent=true"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=admin:$$2a$$10$$wSj7EdH.wQEyukBhrmSUweqOFqda5tMT4Kwf/1fu84Be47VnKHMzq"
      - "traefik.http.middlewares.private-network-ipwhitelist.ipwhitelist.sourcerange=127.0.0.1/32, 10.200.100.1/24, 188.166.94.194/32"


volumes:
  data1:
  postgres1: